name: gcc-version
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
jobs:
  dist:
    name: Make distribution using Dist::Zilla
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache ~/perl5
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-dist-locallib
          path: ~/perl5
      - name: Perl version
        run: |
          perl -v
      - name: Install cpanm
        run: |
          curl -L https://cpanmin.us | perl - --sudo App::cpanminus
      - name: Install local::lib
        run: |
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
      - name: Install Dist::Zilla
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          cpanm -n Dist::Zilla
          dzil authordeps --missing | cpanm -n
      - name: Make distribution
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          dzil build --in build-dir
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./build-dir
  ci-containers:
    needs: dist
    name: "Run with GCC ${{ matrix.gcc }} (should fail?: ${{ matrix.fails || false }}) "
    runs-on: ubuntu-latest
    container: 
    strategy:
      fail-fast: false
      matrix:
        include:
          #- { gcc: '4.4', fails: true }
          - { gcc: '4.6', fails: true }
          - { gcc: '4.8' }
          - { gcc: '6' }
          - { gcc: '7' }
          - { gcc: '10' }
    steps:
      - name: Get dist artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist

      - run: |
         cat <<'EOF' | docker run -i -v $(pwd):/workdir teeks99/gcc-ubuntu:${{ matrix.gcc }} bash
         set -eu -o pipefail

         echo "::group::compiler versions"
         export CC_BIN_DIR="/tmp/cc-bin"
         mkdir $CC_BIN_DIR
         export PATH="$CC_BIN_DIR:$PATH"

         for i in cc  gcc; do ln -s $(which gcc-${{ matrix.gcc }}) $CC_BIN_DIR/$i; done
         for i in c++ g++; do ln -s $(which g++-${{ matrix.gcc }}) $CC_BIN_DIR/$i; done

         cc --version
         gcc --version
         c++ --version
         g++ --version
         echo "::endgroup::"

         echo "::group::perl version"
         perl -V
         echo "::endgroup::"

         echo "::group::setup cpanm"
         ( apt-get update || true ) && apt-get install -y --force-yes --no-install-recommends curl git unzip libssl-dev zlib1g-dev
         # libnet-ssleay-perl: Installed version (1.42) of Net::SSLeay is not in range '1.46'
         curl -L https://cpanmin.us | perl - App::cpanminus
         cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
         echo "::endgroup::"

         cd /workdir

         echo "::group::install dependencies"
         cpanm --verbose --notest --installdeps . || true
         cpanm --notest HTTP::Tiny
         cpanm --notest Inline::CPP
         echo "::endgroup::"

         echo "::group::run tests"
         export PERL5OPT="-MInline=noisy"
         ${{ fromJSON('[ "", "!" ]')[ matrix.fails || false ] }} \
           cpanm --verbose --test-only --test-args TEST_VERBOSE=1 .
         echo "::endgroup::"
         EOF
